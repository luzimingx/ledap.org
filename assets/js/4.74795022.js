(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{317:function(t,s,a){t.exports=a.p+"assets/img/introduction.d0da5ac3.png"},368:function(t,s,a){"use strict";a.r(s);var n=a(43),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),n("p",[t._v("Ledap 创造性的引入了数据适配层的概念，我们也称之为逻辑组件，如 Group 表示的组管理器，将逻辑抽象成一个类，表现层即不同平台的组件，这些组件在数据适配层的基础上进行封装和调用，实现了跨平台组件。由于时间有限，我们目前仅仅提供了 Vue 组件，未来可能会支持更多平台。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(317),alt:"Image from alias"}})]),t._v(" "),n("h2",{attrs:{id:"group-示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#group-示例"}},[t._v("#")]),t._v(" Group 示例")]),t._v(" "),n("p",[t._v("Group 是一个类，表示组管理器，可能是一个按钮组，一个 checkbox 组，或者 radio 组等，不管它样子怎么变化，我们大体上可以看出背后的数据逻辑如下：")]),t._v(" "),n("ul",[n("li",[t._v("group 是一组组件(数组)，由 group 来管控子组件的开和关；")]),t._v(" "),n("li",[t._v("group 的已选中是一个队列，radio 组、按钮组为单选，checkbox 组为多选；")]),t._v(" "),n("li",[t._v("group 可能可以取消选中；")])]),t._v(" "),n("p",[t._v("因此，我把上述逻辑全部写入逻辑组件的 Group 中，这样我们可以在写不同平台下的表示组管理器的展示组件时，直接使用其内部逻辑；同时我们可以写checkbox、radio 等子组件，子组件必须满足 Group 的接口规范，如必须拥有 open、close 方法等，否则，子组件不能被加入组管理。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 逻辑组件的 api 直接被展示组件所使用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Group "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ledap'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" group "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Group")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许选中的最大个数")]),t._v("\ngroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("excludes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加被group管理")]),t._v("\ngroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//选中某个选项")]),t._v("\ngroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取消某个选项")]),t._v("\ngroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unselect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// group当前选中的选项。")]),t._v("\ngroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selected"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=p.exports}}]);