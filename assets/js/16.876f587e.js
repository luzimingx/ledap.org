(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{360:function(t,e,a){"use strict";a.r(e);var r=a(43),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"webdataprovider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdataprovider"}},[t._v("#")]),t._v(" WebDataProvider")]),t._v(" "),a("p",[t._v("WebDataProvider 是 Ledap 的一个基类，是 DataProvider 的子类，用于解决列表的分页问题，和 DataProvider 不同的是，WebDataProvider 的数据来源是网络请求，因此封装了对网络请求的常见方法。")]),t._v(" "),a("h2",{attrs:{id:"获取实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取实例"}},[t._v("#")]),t._v(" 获取实例")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Ledap "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ledap'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" webDp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ledap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebDataProvider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"option"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#option"}},[t._v("#")]),t._v(" option")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必填")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("httpRequest")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Function")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Ledap.App.httpRequest")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取列表发送 http 请求方法")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("httpOptions")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("获取列表请求的参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("primaryKey")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'id'")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("列表去重依据的属性，详见"),a("RouterLink",{attrs:{to:"/api/DataProvider/#dp-load-data-append-primarykey"}},[t._v("primaryKey")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("configName")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'withConfig'")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是否需要后端发送"),a("RouterLink",{attrs:{to:"/api/model/#有配置的-value"}},[t._v("有配置的字段")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("callback")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Function")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("列表请求完成后执行的回调")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("timeWait")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("600")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("发送请求前的延迟时间，例如用户快速点击下一页翻页时，不会多次发出请求")])])])]),t._v(" "),a("p",[a("strong",[t._v("在实例化的时候，会读取 "),a("RouterLink",{attrs:{to:"/api/App/#app-config-option"}},[t._v("WebDataProvider 的全局配置")])],1)]),t._v(" "),a("h2",{attrs:{id:"实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),a("h3",{attrs:{id:"webdp-isloading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-isloading"}},[t._v("#")]),t._v(" webDp.isLoading")]),t._v(" "),a("ul",[a("li",[t._v("类型：boolean")]),t._v(" "),a("li",[t._v("详细：是否正在发送请求，注意当点击翻页的时候，webDp.timeWait 之后，此值才会变成 true")])]),t._v(" "),a("h3",{attrs:{id:"webdp-configname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-configname"}},[t._v("#")]),t._v(" webDp.configName")]),t._v(" "),a("ul",[a("li",[t._v("类型：String")]),t._v(" "),a("li",[t._v("详细：是否需要后端发送"),a("RouterLink",{attrs:{to:"/api/model/#有配置的-value"}},[t._v("有配置的字段")])],1)]),t._v(" "),a("h3",{attrs:{id:"webdp-httprequest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-httprequest"}},[t._v("#")]),t._v(" webDp.httpRequest")]),t._v(" "),a("ul",[a("li",[t._v("类型：Function")]),t._v(" "),a("li",[t._v("详细：发送列表请求的方法")])]),t._v(" "),a("h3",{attrs:{id:"webdp-httpoptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-httpoptions"}},[t._v("#")]),t._v(" webDp.httpOptions")]),t._v(" "),a("ul",[a("li",[t._v("类型：Object")]),t._v(" "),a("li",[t._v("详细：发送列表请求的参数")])]),t._v(" "),a("h3",{attrs:{id:"webdp-primarykey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-primarykey"}},[t._v("#")]),t._v(" webDp.primaryKey")]),t._v(" "),a("ul",[a("li",[t._v("类型：String")]),t._v(" "),a("li",[t._v("详细：列表去重依据的属性，详见"),a("RouterLink",{attrs:{to:"/api/DataProvider/#dp-load-data-append-primarykey"}},[t._v("primaryKey")])],1)]),t._v(" "),a("h3",{attrs:{id:"webdp-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-callback"}},[t._v("#")]),t._v(" webDp.callback")]),t._v(" "),a("ul",[a("li",[t._v("类型：Function")]),t._v(" "),a("li",[t._v("详细：列表请求完成后执行的回调")])]),t._v(" "),a("h3",{attrs:{id:"webdp-timewait"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-timewait"}},[t._v("#")]),t._v(" webDp.timeWait")]),t._v(" "),a("ul",[a("li",[t._v("类型：Number")]),t._v(" "),a("li",[t._v("详细：发送请求前的延迟时间")])]),t._v(" "),a("h2",{attrs:{id:"实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),a("h3",{attrs:{id:"webdp-refresh-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-refresh-type"}},[t._v("#")]),t._v(" webDp.refresh([type])")]),t._v(" "),a("ul",[a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("{String} type 默认值 'refresh'")])])]),t._v(" "),a("li",[t._v("详细：刷新方法，实现了普通刷新、上拉刷新、下拉刷新功能。")])]),t._v(" "),a("h4",{attrs:{id:"type-的有效值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-的有效值"}},[t._v("#")]),t._v(" type 的有效值")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("type")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("refresh")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("普通刷新，刷新当面页面")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("header")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("上拉刷新，会重新加载第 1 页")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("footer")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("下拉刷新，会加载下一页，下一页会以 append 的方式追加在列表中")])])])]),t._v(" "),a("h3",{attrs:{id:"webdp-changepage-page-reload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-changepage-page-reload"}},[t._v("#")]),t._v(" webDp.changePage(page[, reload])")]),t._v(" "),a("ul",[a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("{Number} page")]),t._v(" "),a("li",[t._v("{boolean} reload 默认为true")])])]),t._v(" "),a("li",[t._v("详细：加载指定页数，如果 reload 为 false，则只修改了 webDp.pager.currentPage，未发出请求。")])]),t._v(" "),a("h3",{attrs:{id:"webdp-nextpage-reload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-nextpage-reload"}},[t._v("#")]),t._v(" webDp.nextPage([reload])")]),t._v(" "),a("ul",[a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("{boolean} reload 默认为true")])])]),t._v(" "),a("li",[t._v("详细：加载下一页，如果 reload 为 false，则只修改了 webDp.pager.currentPage，未发出请求。")])]),t._v(" "),a("h3",{attrs:{id:"webdp-prepage-reload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-prepage-reload"}},[t._v("#")]),t._v(" webDp.prePage([reload])")]),t._v(" "),a("ul",[a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("{boolean} reload 默认为true")])])]),t._v(" "),a("li",[t._v("详细：加载下一页，如果 reload 为 false，则只修改了 webDp.pager.currentPage，未发出请求。")])]),t._v(" "),a("h3",{attrs:{id:"webdp-loaddata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-loaddata"}},[t._v("#")]),t._v(" webDp.loadData()")]),t._v(" "),a("ul",[a("li",[t._v("详细：发送列表请求。在 changePage 等方法的 reload 为 false 的时候，可以手动调用 loadData 方法加载列表。")])]),t._v(" "),a("h3",{attrs:{id:"webdp-setparams-params-reload-tofirstpage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-setparams-params-reload-tofirstpage"}},[t._v("#")]),t._v(" webDp.setParams(params[, reload, toFirstPage])")]),t._v(" "),a("ul",[a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("{Object} params")]),t._v(" "),a("li",[t._v("{boolean} reload 默认为 true，是否发出请求")]),t._v(" "),a("li",[t._v("{boolean} toFirstPage 默认为 true，是否回到第 1 页")])])]),t._v(" "),a("li",[t._v("详细：修改 "),a("RouterLink",{attrs:{to:"/api/DataProvider/#dp-searchmodel"}},[t._v("webDp.searchModel")]),t._v(" 的值，然后重新加载列表。")],1)]),t._v(" "),a("h3",{attrs:{id:"webdp-setsort-sort-reload-tofirstpage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdp-setsort-sort-reload-tofirstpage"}},[t._v("#")]),t._v(" webDp.setSort(sort[, reload, toFirstPage])")]),t._v(" "),a("ul",[a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("{String} sort")]),t._v(" "),a("li",[t._v("{boolean} reload 默认为 true，是否发出请求")]),t._v(" "),a("li",[t._v("{boolean} toFirstPage 默认为 false，是否回到第 1 页")])])]),t._v(" "),a("li",[t._v("详细：修改 "),a("RouterLink",{attrs:{to:"/api/DataProvider/#dp-sort"}},[t._v("webDp.sort")]),t._v(" 的值，然后重新加载列表。")],1)]),t._v(" "),a("h2",{attrs:{id:"静态属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态属性"}},[t._v("#")]),t._v(" 静态属性")]),t._v(" "),a("h3",{attrs:{id:"webdataprovider-event-beforegetdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdataprovider-event-beforegetdata"}},[t._v("#")]),t._v(" WebDataProvider.EVENT_BEFOREGETDATA")]),t._v(" "),a("ul",[a("li",[t._v("详细：获取 data 前的事件名称")])]),t._v(" "),a("h3",{attrs:{id:"webdataprovider-event-aftergetdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdataprovider-event-aftergetdata"}},[t._v("#")]),t._v(" WebDataProvider.EVENT_AFTERGETDATA")]),t._v(" "),a("ul",[a("li",[t._v("详细：获取 data 后的事件名称")])]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("p",[t._v("需要注意的是，WebDataProvider 是 "),a("RouterLink",{attrs:{to:"/api/DataProvider/"}},[t._v("DataProvider")]),t._v(" 的子类，会拥有其父类的所有方法和属性。")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);